import gql from "graphql-tag";
import { Box, FormControlLabel, Checkbox, TextField } from "@mui/material";
import { Paper, Grid, Typography } from "@material-ui/core";
import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { urqlClient } from "../src/libs/gql-requests";
import styles from "../styles/Home.module.css";
import { Fragment } from "react";
import AddTodoForm from "./component/AddTodoForm";
import List from "./component/List";



type Props = {
  todos: {
    id: string;
    name: string;
  }[]
}

const Home: NextPage<Props> = (props) => {

  const styless = {
    Paper: {
      padding: 20,
      margin: "auto",
      textAlign: "center",
      width: 500
    }
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Todo.app</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Todo List</h1>

        <Fragment>
          <Grid container spacing={0}>
            <Grid item xs={12}>
              <Paper className={styles.Paper}>
                <AddTodoForm />
              </Paper>
            </Grid>
            <Grid item xs={12} className={styles.Paper}>
            <List
              lists={props.todos}
            />
            </Grid>
          </Grid>
        </Fragment>

      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps<Props> = async () => {
  try {
    const client = await urqlClient();
    const todosQuery = gql`
  query {
    todos {
      id
      name
    }
  }
  `;

    const todoResults = await client.query(todosQuery, {}).toPromise();

    return {
      props: {
        todos: todoResults.data.todos,
      },
    };
  } catch (e) {
    console.error(e);
    return {
      notFound: true,
    };
  }
};

export default Home;